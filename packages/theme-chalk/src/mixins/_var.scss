@use 'sass:map';
@use 'config';
@use 'function' as *;
@use '../color/theme' as *;
@use '../common/var' as *;
@use '../dark/theme.scss' as *;
// set css var value, because we need translate value to string
// for example:
// @include set-css-var-value(('color', 'primary'), red);
// --el-color-primary: red;
@mixin set-css-var-value($name, $value) {
  #{joinVarName($name)}: #{$value};
}

@mixin set-css-var-type($name, $type, $variables) {
  #{getCssVarName($name, $type)}: #{map.get($variables, $type)};
}

// Sets the scene CSS for the theme type
@mixin set-css-color-type($color-type) {
  @each $scence, $value in map.get($color-scence, $color-type) {
    #{getCssVarName('color', $color-type, $scence)}: $value;
  }
}

// get all theme color
@mixin set-all-theme-color($theme-type: 'light') {
  @if $theme-type == 'dark' {
    @each $attribute, $value in $theme-dark-colors {
      @include set-css-theme-color($attribute)
    }
  } @else if $theme-type == 'light' {
    @each $attribute, $value in $theme-colors {
      @include set-css-theme-color($attribute)
    }
  }
  
}

// get theme color
@mixin set-css-theme-color ($theme-color, $theme-type: 'light') {
  @if $theme-type == 'dark' {
    @each $attribute, $value in map.get($theme-dark-colors, $theme-color) {
      #{getCssVarName('color', $attribute)}: $value;
    }
  } @else if $theme-type == 'light' {
    @each $attribute, $value in map.get($theme-colors, $theme-color) {
      #{getCssVarName('color', $attribute)}: $value;
    }
  }
  
}

@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    @if $attribute == 'default' {
      #{getCssVarName($name)}: #{$value};
    } @else {
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

@mixin set-css-color-rgb($type) {
  $color: map.get($colors, $type, 'base');
  @include set-css-var-value(
    ('color', $type, 'rgb'),
    #{red($color),
    green($color),
    blue($color)}
  );
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --el-button-text-color: var(--el-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}